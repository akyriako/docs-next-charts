apiVersion: v1
kind: ConfigMap
metadata:
  name: reverse-proxy-config
  namespace: docs-next
data:
  nginx.conf: |
    events {}
    http {
      server {
        listen 80;

        valid_referers server_names preview.hypelens.de;   
        if ($invalid_referer) {  
          return 403;     
        }

        location / {
          proxy_pass http://typesense-headless:8108/;
          proxy_pass_request_headers on;
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: typesense-reverse-proxy
  namespace: docs-next
  labels:
    app: typesense-reverse-proxy
spec:
  selector:
    matchLabels:
      app: typesense-reverse-proxy
  replicas: 1
  template:
    metadata:
      labels:
        app: typesense-reverse-proxy
    spec:
      containers:
        - name: typesense-reverse-proxy
          image: nginx:alpine
          ports:
          - containerPort: 80
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: nginx-config
          configMap:
            name: reverse-proxy-config
---
kind: Service
apiVersion: v1
metadata:
  name: typesense-reverse-proxy
  namespace: docs-next
spec:
  selector:
    app: typesense-reverse-proxy
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
    name: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: typesense-reverse-proxy
  namespace: docs-next
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    kubernetes.io/elb.class: union
    kubernetes.io/elb.id: 6d5ba18b-c302-4a0d-9951-d678bbad7a54
    kubernetes.io/elb.port: '80'
spec:
  ingressClassName: cce
  rules:
  - host: docs-search-preview.hypelens.de
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: typesense-reverse-proxy
            port:
              number: 80
        property:
              ingress.beta.kubernetes.io/url-match-mode: STARTS_WITH
