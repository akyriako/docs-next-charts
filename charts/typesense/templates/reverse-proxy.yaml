apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "typesense.fullname" . }}-reverse-proxy-config
data:
  nginx.conf: |
    events {}
    http {
      server {
        listen 80;

        valid_referers server_names {{ required "reverseProxy.docusaurus.externalUrl is required" .Values.docusaurus.externalUrl }};   
        if ($invalid_referer) {  
          return 403;     
        }

        location / {
          proxy_pass http://{{ include "typesense.fullname" . }}-svc:8108/;
          proxy_pass_request_headers on;
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "typesense.fullname" . }}-reverse-proxy
  labels:
    app: {{ include "typesense.fullname" . }}-reverse-proxy
spec:
  replicas: {{ .Values.reverseProxy.replicas }}
  selector:
    matchLabels:
      app: {{ include "typesense.fullname" . }}-reverse-proxy
  template:
    metadata:
      labels:
        app: {{ include "typesense.fullname" . }}-reverse-proxy
    spec:
      containers:
        - name: typesense-reverse-proxy
          image: nginx:alpine
          ports:
          - containerPort: 80
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: nginx-config
          configMap:
            name: {{ include "typesense.fullname" . }}-reverse-proxy-config
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "typesense.fullname" . }}-reverse-proxy
  labels:
  {{- include "typesense.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  selector:
    app: {{ include "typesense.fullname" . }}-reverse-proxy
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      name: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "typesense.fullname" . }}-reverse-proxy
  labels:
  {{- include "typesense.labels" . | nindent 4 }}
  annotations:
    cert-manager.io/cluster-issuer: {{ required "reverseProxy.ingress.clusterIssuer is required" .Values.reverseProxy.ingress.clusterIssuer }}
spec:
  ingressClassName: nginx
  tls:
  - hosts:
      - {{ required "reverseProxy.ingress.host is required" .Values.reverseProxy.ingress.host }}
    secretName: {{ include "typesense.fullname" . }}-reverse-proxy-{{ required "reverseProxy.ingress.clusterIssuer is required" .Values.reverseProxy.ingress.clusterIssuer }}-certificate-tls
  rules:
  - host: {{ required "reverseProxy.ingress.host is required" .Values.reverseProxy.ingress.host }}
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: {{ include "typesense.fullname" . }}-reverse-proxy
            port:
              number: 80
